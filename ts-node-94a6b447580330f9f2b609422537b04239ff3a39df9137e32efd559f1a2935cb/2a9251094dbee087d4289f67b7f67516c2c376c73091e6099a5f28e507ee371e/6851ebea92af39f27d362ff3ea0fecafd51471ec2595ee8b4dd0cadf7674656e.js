"use strict";
// Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
// Please don't change this file manually but run `prisma generate` to update it.
// For more information, please read the docs: https://www.prisma.io/docs/prisma-client/
Object.defineProperty(exports, "__esModule", { value: true });
exports.typeDefs = "type AggregatePost {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\nscalar Long\n\ntype Mutation {\n  createPost(data: PostCreateInput!): Post!\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  deletePost(where: PostWhereUniqueInput!): Post\n  deleteManyPosts(where: PostWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Post {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  published: Boolean!\n  title: String!\n  content: String!\n  author: User!\n}\n\ntype PostConnection {\n  pageInfo: PageInfo!\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  id: ID\n  published: Boolean\n  title: String!\n  content: String!\n  author: UserCreateOneWithoutPostsInput!\n}\n\ninput PostCreateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateWithoutAuthorInput {\n  id: ID\n  published: Boolean\n  title: String!\n  content: String!\n}\n\ntype PostEdge {\n  node: Post!\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  published_ASC\n  published_DESC\n  title_ASC\n  title_DESC\n  content_ASC\n  content_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  published: Boolean!\n  title: String!\n  content: String!\n}\n\ninput PostScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  published: Boolean\n  published_not: Boolean\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  content: String\n  content_not: String\n  content_in: [String!]\n  content_not_in: [String!]\n  content_lt: String\n  content_lte: String\n  content_gt: String\n  content_gte: String\n  content_contains: String\n  content_not_contains: String\n  content_starts_with: String\n  content_not_starts_with: String\n  content_ends_with: String\n  content_not_ends_with: String\n  AND: [PostScalarWhereInput!]\n  OR: [PostScalarWhereInput!]\n  NOT: [PostScalarWhereInput!]\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n  AND: [PostSubscriptionWhereInput!]\n  OR: [PostSubscriptionWhereInput!]\n  NOT: [PostSubscriptionWhereInput!]\n}\n\ninput PostUpdateInput {\n  published: Boolean\n  title: String\n  content: String\n  author: UserUpdateOneRequiredWithoutPostsInput\n}\n\ninput PostUpdateManyDataInput {\n  published: Boolean\n  title: String\n  content: String\n}\n\ninput PostUpdateManyMutationInput {\n  published: Boolean\n  title: String\n  content: String\n}\n\ninput PostUpdateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  delete: [PostWhereUniqueInput!]\n  connect: [PostWhereUniqueInput!]\n  set: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]\n  deleteMany: [PostScalarWhereInput!]\n  updateMany: [PostUpdateManyWithWhereNestedInput!]\n}\n\ninput PostUpdateManyWithWhereNestedInput {\n  where: PostScalarWhereInput!\n  data: PostUpdateManyDataInput!\n}\n\ninput PostUpdateWithoutAuthorDataInput {\n  published: Boolean\n  title: String\n  content: String\n}\n\ninput PostUpdateWithWhereUniqueWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutAuthorDataInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutAuthorDataInput!\n  create: PostCreateWithoutAuthorInput!\n}\n\ninput PostWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  published: Boolean\n  published_not: Boolean\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  content: String\n  content_not: String\n  content_in: [String!]\n  content_not_in: [String!]\n  content_lt: String\n  content_lte: String\n  content_gt: String\n  content_gte: String\n  content_contains: String\n  content_not_contains: String\n  content_starts_with: String\n  content_not_starts_with: String\n  content_ends_with: String\n  content_not_ends_with: String\n  author: UserWhereInput\n  AND: [PostWhereInput!]\n  OR: [PostWhereInput!]\n  NOT: [PostWhereInput!]\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  post(where: PostWhereUniqueInput!): Post\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User {\n  id: ID!\n  email: String!\n  password: String!\n  name: String!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  id: ID\n  email: String!\n  password: String!\n  name: String!\n  posts: PostCreateManyWithoutAuthorInput\n}\n\ninput UserCreateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutPostsInput {\n  id: ID\n  email: String!\n  password: String!\n  name: String!\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  name_ASC\n  name_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  password: String!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateInput {\n  email: String\n  password: String\n  name: String\n  posts: PostUpdateManyWithoutAuthorInput\n}\n\ninput UserUpdateManyMutationInput {\n  email: String\n  password: String\n  name: String\n}\n\ninput UserUpdateOneRequiredWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  update: UserUpdateWithoutPostsDataInput\n  upsert: UserUpsertWithoutPostsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateWithoutPostsDataInput {\n  email: String\n  password: String\n  name: String\n}\n\ninput UserUpsertWithoutPostsInput {\n  update: UserUpdateWithoutPostsDataInput!\n  create: UserCreateWithoutPostsInput!\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  posts_every: PostWhereInput\n  posts_some: PostWhereInput\n  posts_none: PostWhereInput\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,